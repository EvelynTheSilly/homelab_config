{
  config,
  pkgs,
  ...
}: {
  # Import other configuration modules
  # (hardware-configuration.nix is autogenerated upon installation)
  # paths in nix expressions are always relative the file which defines them

  nix.settings.experimental-features = ["nix-command" "flakes"];

  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
  services.logind.extraConfig = ''
    HandleLidSwitch=ignore
    HandleLidSwitchDocked=ignore
    HandleLidSwitchExternalPower=ignore
  '';

  imports = [
    ./hardware_configuration.nix

    ./containers/pihole.nix
    #./containers/plex.nix i give up
    ./containers/caddy.nix
    ./containers/registry.nix
    ./containers/personal_homepage.nix

    ./modules/torent_downloader.nix
  ];

  # Name your host machine
  networking.hostName = "homelab";

  # Set your time zone.
  time.timeZone = "Europe/London";

  # Enter keyboard layout
  services.xserver.layout = "us";

  # Vvirtualisation
  virtualisation.docker = {
    enable = true;
  };
  virtualisation.oci-containers.backend = "docker";

  # Define user accounts
  users.users.eve = {
    extraGroups = ["wheel" "networkmanager" "docker"];
    isNormalUser = true;
    openssh.authorizedKeys.keys = [
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIA2bnr88G2H2/BnK4U7zvIqOv+x2GbkWJuWnFYuyXbFP"
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHA8cx1lFAwBUSoBFi4631p21YAtQj02XAurubJ0bCnw"
    ];
  };

  # Install some packages
  environment.systemPackages = with pkgs; [
    docker
    helix
    git
    github-cli
    networkmanager
    zellij
    aria2
    transmission_4
  ];

  services.dbus.enable = true;
  # Enable the OpenSSH daemon
  services.openssh.enable = true;
  services.openssh.settings.PasswordAuthentication = true;


  # System-wide trust
    security.pki.certificates = [
      ''
        -----BEGIN CERTIFICATE-----
        MIIBozCCAUqgAwIBAgIRAOoSjORGCB9Gb5m5CczYfmAwCgYIKoZIzj0EAwIwMDEu
        MCwGA1UEAxMlQ2FkZHkgTG9jYWwgQXV0aG9yaXR5IC0gMjAyNSBFQ0MgUm9vdDAe
        Fw0yNTA0MjEyMzI0MTdaFw0zNTAyMjgyMzI0MTdaMDAxLjAsBgNVBAMTJUNhZGR5
        IExvY2FsIEF1dGhvcml0eSAtIDIwMjUgRUNDIFJvb3QwWTATBgcqhkjOPQIBBggq
        hkjOPQMBBwNCAASkvxQ9SBRzvRTGp0CFKWKWz3SWLphLvQs34U32+3RIg4bHYFgL
        DJQ4VsFH0dnQbVvBNH2jEEaoTgJ1tez9BPIUo0UwQzAOBgNVHQ8BAf8EBAMCAQYw
        EgYDVR0TAQH/BAgwBgEB/wIBATAdBgNVHQ4EFgQUyre8Mn7EBjT2wboQ3XLTcT7H
        J08wCgYIKoZIzj0EAwIDRwAwRAIgB0c7j7uNn/Lz6VGOBYlWIZV5+HYYYjtr4d5q
        HnIya0ECIGay1+XiTSVrgvl+z6NTainJNAwWBbc/68WnMJcfH0I2
        -----END CERTIFICATE-----
      ''
    ];

    # Docker trust for local registry
    environment.etc."docker/certs.d/registry.eve.home/ca.crt".text = ''
      -----BEGIN CERTIFICATE-----
      MIIBozCCAUqgAwIBAgIRAOoSjORGCB9Gb5m5CczYfmAwCgYIKoZIzj0EAwIwMDEu
      MCwGA1UEAxMlQ2FkZHkgTG9jYWwgQXV0aG9yaXR5IC0gMjAyNSBFQ0MgUm9vdDAe
      Fw0yNTA0MjEyMzI0MTdaFw0zNTAyMjgyMzI0MTdaMDAxLjAsBgNVBAMTJUNhZGR5
      IExvY2FsIEF1dGhvcml0eSAtIDIwMjUgRUNDIFJvb3QwWTATBgcqhkjOPQIBBggq
      hkjOPQMBBwNCAASkvxQ9SBRzvRTGp0CFKWKWz3SWLphLvQs34U32+3RIg4bHYFgL
      DJQ4VsFH0dnQbVvBNH2jEEaoTgJ1tez9BPIUo0UwQzAOBgNVHQ8BAf8EBAMCAQYw
      EgYDVR0TAQH/BAgwBgEB/wIBATAdBgNVHQ4EFgQUyre8Mn7EBjT2wboQ3XLTcT7H
      J08wCgYIKoZIzj0EAwIDRwAwRAIgB0c7j7uNn/Lz6VGOBYlWIZV5+HYYYjtr4d5q
      HnIya0ECIGay1+XiTSVrgvl+z6NTainJNAwWBbc/68WnMJcfH0I2
      -----END CERTIFICATE-----
    '';


    networking = {
      networkmanager.enable = true; # Easiest to use and most distros use this by default.
      nameservers = ["192.168.86.34" "1.1.1.1"];
      dhcpcd.enable = false; # Optional: disable dhcpcd if you're using NetworkManager or systemd-networkd
      useDHCP = false;
    };

    # Force systemd-resolved to use your config
    services.resolved = {
      enable = false;
      fallbackDns = ["1.1.1.1"]; # Again, your homelab first
      domains = ["~."]; # Apply DNS to all domains
      extraConfig = ''
        DNSStubListener=yes
      '';
    };

}
